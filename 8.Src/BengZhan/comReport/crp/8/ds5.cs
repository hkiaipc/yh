//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace BengZhan.comReport.crp._8 {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ds5 : DataSet {
        
        private tbRep8DataTable tabletbRep8;
        
        public ds5() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected ds5(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbRep8"] != null)) {
                    this.Tables.Add(new tbRep8DataTable(ds.Tables["tbRep8"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbRep8DataTable tbRep8 {
            get {
                return this.tabletbRep8;
            }
        }
        
        public override DataSet Clone() {
            ds5 cln = ((ds5)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tbRep8"] != null)) {
                this.Tables.Add(new tbRep8DataTable(ds.Tables["tbRep8"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletbRep8 = ((tbRep8DataTable)(this.Tables["tbRep8"]));
            if ((this.tabletbRep8 != null)) {
                this.tabletbRep8.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "ds5";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds5.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletbRep8 = new tbRep8DataTable();
            this.Tables.Add(this.tabletbRep8);
        }
        
        private bool ShouldSerializetbRep8() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tbRep8RowChangeEventHandler(object sender, tbRep8RowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRep8DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnfield1;
            
            private DataColumn columnfield2;
            
            private DataColumn columnfield3;
            
            private DataColumn columnfield4;
            
            private DataColumn columnfield5;
            
            private DataColumn columnfield6;
            
            private DataColumn columnfield7;
            
            private DataColumn columnfield8;
            
            internal tbRep8DataTable() : 
                    base("tbRep8") {
                this.InitClass();
            }
            
            internal tbRep8DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn field1Column {
                get {
                    return this.columnfield1;
                }
            }
            
            internal DataColumn field2Column {
                get {
                    return this.columnfield2;
                }
            }
            
            internal DataColumn field3Column {
                get {
                    return this.columnfield3;
                }
            }
            
            internal DataColumn field4Column {
                get {
                    return this.columnfield4;
                }
            }
            
            internal DataColumn field5Column {
                get {
                    return this.columnfield5;
                }
            }
            
            internal DataColumn field6Column {
                get {
                    return this.columnfield6;
                }
            }
            
            internal DataColumn field7Column {
                get {
                    return this.columnfield7;
                }
            }
            
            internal DataColumn field8Column {
                get {
                    return this.columnfield8;
                }
            }
            
            public tbRep8Row this[int index] {
                get {
                    return ((tbRep8Row)(this.Rows[index]));
                }
            }
            
            public event tbRep8RowChangeEventHandler tbRep8RowChanged;
            
            public event tbRep8RowChangeEventHandler tbRep8RowChanging;
            
            public event tbRep8RowChangeEventHandler tbRep8RowDeleted;
            
            public event tbRep8RowChangeEventHandler tbRep8RowDeleting;
            
            public void AddtbRep8Row(tbRep8Row row) {
                this.Rows.Add(row);
            }
            
            public tbRep8Row AddtbRep8Row(string field1, string field2, string field3, string field4, string field5, string field6, string field7, string field8) {
                tbRep8Row rowtbRep8Row = ((tbRep8Row)(this.NewRow()));
                rowtbRep8Row.ItemArray = new object[] {
                        field1,
                        field2,
                        field3,
                        field4,
                        field5,
                        field6,
                        field7,
                        field8};
                this.Rows.Add(rowtbRep8Row);
                return rowtbRep8Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tbRep8DataTable cln = ((tbRep8DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tbRep8DataTable();
            }
            
            internal void InitVars() {
                this.columnfield1 = this.Columns["field1"];
                this.columnfield2 = this.Columns["field2"];
                this.columnfield3 = this.Columns["field3"];
                this.columnfield4 = this.Columns["field4"];
                this.columnfield5 = this.Columns["field5"];
                this.columnfield6 = this.Columns["field6"];
                this.columnfield7 = this.Columns["field7"];
                this.columnfield8 = this.Columns["field8"];
            }
            
            private void InitClass() {
                this.columnfield1 = new DataColumn("field1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield1);
                this.columnfield2 = new DataColumn("field2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield2);
                this.columnfield3 = new DataColumn("field3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield3);
                this.columnfield4 = new DataColumn("field4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield4);
                this.columnfield5 = new DataColumn("field5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield5);
                this.columnfield6 = new DataColumn("field6", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield6);
                this.columnfield7 = new DataColumn("field7", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield7);
                this.columnfield8 = new DataColumn("field8", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfield8);
            }
            
            public tbRep8Row NewtbRep8Row() {
                return ((tbRep8Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tbRep8Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tbRep8Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbRep8RowChanged != null)) {
                    this.tbRep8RowChanged(this, new tbRep8RowChangeEvent(((tbRep8Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbRep8RowChanging != null)) {
                    this.tbRep8RowChanging(this, new tbRep8RowChangeEvent(((tbRep8Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbRep8RowDeleted != null)) {
                    this.tbRep8RowDeleted(this, new tbRep8RowChangeEvent(((tbRep8Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbRep8RowDeleting != null)) {
                    this.tbRep8RowDeleting(this, new tbRep8RowChangeEvent(((tbRep8Row)(e.Row)), e.Action));
                }
            }
            
            public void RemovetbRep8Row(tbRep8Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRep8Row : DataRow {
            
            private tbRep8DataTable tabletbRep8;
            
            internal tbRep8Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbRep8 = ((tbRep8DataTable)(this.Table));
            }
            
            public string field1 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field1Column] = value;
                }
            }
            
            public string field2 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field2Column] = value;
                }
            }
            
            public string field3 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field3Column] = value;
                }
            }
            
            public string field4 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field4Column] = value;
                }
            }
            
            public string field5 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field5Column] = value;
                }
            }
            
            public string field6 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field6Column] = value;
                }
            }
            
            public string field7 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field7Column] = value;
                }
            }
            
            public string field8 {
                get {
                    try {
                        return ((string)(this[this.tabletbRep8.field8Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletbRep8.field8Column] = value;
                }
            }
            
            public bool Isfield1Null() {
                return this.IsNull(this.tabletbRep8.field1Column);
            }
            
            public void Setfield1Null() {
                this[this.tabletbRep8.field1Column] = System.Convert.DBNull;
            }
            
            public bool Isfield2Null() {
                return this.IsNull(this.tabletbRep8.field2Column);
            }
            
            public void Setfield2Null() {
                this[this.tabletbRep8.field2Column] = System.Convert.DBNull;
            }
            
            public bool Isfield3Null() {
                return this.IsNull(this.tabletbRep8.field3Column);
            }
            
            public void Setfield3Null() {
                this[this.tabletbRep8.field3Column] = System.Convert.DBNull;
            }
            
            public bool Isfield4Null() {
                return this.IsNull(this.tabletbRep8.field4Column);
            }
            
            public void Setfield4Null() {
                this[this.tabletbRep8.field4Column] = System.Convert.DBNull;
            }
            
            public bool Isfield5Null() {
                return this.IsNull(this.tabletbRep8.field5Column);
            }
            
            public void Setfield5Null() {
                this[this.tabletbRep8.field5Column] = System.Convert.DBNull;
            }
            
            public bool Isfield6Null() {
                return this.IsNull(this.tabletbRep8.field6Column);
            }
            
            public void Setfield6Null() {
                this[this.tabletbRep8.field6Column] = System.Convert.DBNull;
            }
            
            public bool Isfield7Null() {
                return this.IsNull(this.tabletbRep8.field7Column);
            }
            
            public void Setfield7Null() {
                this[this.tabletbRep8.field7Column] = System.Convert.DBNull;
            }
            
            public bool Isfield8Null() {
                return this.IsNull(this.tabletbRep8.field8Column);
            }
            
            public void Setfield8Null() {
                this[this.tabletbRep8.field8Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRep8RowChangeEvent : EventArgs {
            
            private tbRep8Row eventRow;
            
            private DataRowAction eventAction;
            
            public tbRep8RowChangeEvent(tbRep8Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tbRep8Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
