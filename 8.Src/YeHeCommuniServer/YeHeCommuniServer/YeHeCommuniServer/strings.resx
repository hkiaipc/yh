<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alarm" xml:space="preserve">
    <value>报警</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>冶河采集</value>
  </data>
  <data name="AppNameLong" xml:space="preserve">
    <value>冶河数据采集程序</value>
  </data>
  <data name="AppRunning" xml:space="preserve">
    <value>程序已经运行</value>
  </data>
  <data name="AppVersion" xml:space="preserve">
    <value>版本 {0}</value>
  </data>
  <data name="AreYouExit" xml:space="preserve">
    <value>您确定要退出吗?</value>
  </data>
  <data name="BP1" xml:space="preserve">
    <value>一次回压</value>
  </data>
  <data name="BP2" xml:space="preserve">
    <value>二次回压</value>
  </data>
  <data name="BT1" xml:space="preserve">
    <value>一次回温</value>
  </data>
  <data name="BT2" xml:space="preserve">
    <value>二次回温</value>
  </data>
  <data name="ByIP" xml:space="preserve">
    <value>通过IP地址</value>
  </data>
  <data name="ByLocalPort" xml:space="preserve">
    <value>通过本地端口</value>
  </data>
  <data name="ByRemotePort" xml:space="preserve">
    <value>通过远程端口</value>
  </data>
  <data name="CM" xml:space="preserve">
    <value>循环泵</value>
  </data>
  <data name="CommandSubmit" xml:space="preserve">
    <value>命令已提交</value>
  </data>
  <data name="CommuniLogTitle" xml:space="preserve">
    <value>通讯记录 - {0} {1}</value>
  </data>
  <data name="Cycle" xml:space="preserve">
    <value>循环({0})</value>
  </data>
  <data name="CyclePump" xml:space="preserve">
    <value>循环泵：{0}</value>
  </data>
  <data name="Datas" xml:space="preserve">
    <value>数据: </value>
  </data>
  <data name="DeleteDevice" xml:space="preserve">
    <value>确定要删除设备 '{0}' 吗?</value>
  </data>
  <data name="DeleteStation" xml:space="preserve">
    <value>确定要删除站点 '{0}' 吗?</value>
  </data>
  <data name="Device" xml:space="preserve">
    <value>设备: </value>
  </data>
  <data name="DT" xml:space="preserve">
    <value>时间: </value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误: </value>
  </data>
  <data name="Executing" xml:space="preserve">
    <value>{0} {1} ...</value>
    <comment>datetime operaname</comment>
  </data>
  <data name="ExistAddress" xml:space="preserve">
    <value>已经存在 '{0}' 地址 '{1}'</value>
  </data>
  <data name="ExistStationName" xml:space="preserve">
    <value>站点 '{0}' 已经存在</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>失败</value>
  </data>
  <data name="GP1" xml:space="preserve">
    <value>一次供压</value>
  </data>
  <data name="GP2" xml:space="preserve">
    <value>二次供压</value>
  </data>
  <data name="GT1" xml:space="preserve">
    <value>一次供温</value>
  </data>
  <data name="GT2" xml:space="preserve">
    <value>二次供温</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>www.xdgk.com.cn</value>
  </data>
  <data name="Immediate" xml:space="preserve">
    <value>单次</value>
  </data>
  <data name="InvalidIPAddress" xml:space="preserve">
    <value>无效的IP地址</value>
  </data>
  <data name="LastExecut" xml:space="preserve">
    <value>最后执行: </value>
  </data>
  <data name="Listening" xml:space="preserve">
    <value>正在监听 {0}</value>
  </data>
  <data name="NotSelectedDevice" xml:space="preserve">
    <value>请先选择一个设备!</value>
  </data>
  <data name="Opera" xml:space="preserve">
    <value>操作: </value>
  </data>
  <data name="RecruitePump" xml:space="preserve">
    <value>补水泵：{0}</value>
  </data>
  <data name="RM" xml:space="preserve">
    <value>补水泵</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>运行</value>
  </data>
  <data name="StationNameCanNotEmpty" xml:space="preserve">
    <value>站名不能为空</value>
  </data>
  <data name="StationNotConnect" xml:space="preserve">
    <value>站点 '{0}' 尚未连接</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>成功</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>任务</value>
  </data>
  <data name="TaskName" xml:space="preserve">
    <value>任务名称: </value>
  </data>
  <data name="TaskType" xml:space="preserve">
    <value>任务类型: </value>
  </data>
  <data name="XdgkCompany" xml:space="preserve">
    <value>唐山现代工控技术有限公司</value>
  </data>
  <data name="PleaseSelectDeviceType" xml:space="preserve">
    <value>请先选择设备类型！</value>
  </data>
  <data name="PleaseSelectStation" xml:space="preserve">
    <value>请先选择一个站点！</value>
  </data>
  <data name="PleaseSelectTask" xml:space="preserve">
    <value>请先选择一个任务！</value>
  </data>
  <data name="DeleteTask" xml:space="preserve">
    <value>确定要删除任务 '{0}' 吗?</value>
  </data>
  <data name="UnDefineDeviceType" xml:space="preserve">
    <value>未定义的设备类型 '{0}'</value>
  </data>
</root>